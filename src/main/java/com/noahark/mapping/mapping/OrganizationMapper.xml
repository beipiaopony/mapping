<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.noahark.mapping.dao.IOrganizationDao" >
  <resultMap id="BaseResultMap" type="com.noahark.mapping.bean.Organization" >
    <id column="object_id" property="orgId" jdbcType="INTEGER" />
    <result column="dim_code" property="orgCode" jdbcType="VARCHAR" />
    <result column="dim_code_name" property="orgName" jdbcType="VARCHAR" />
    <result column="orgdesc" property="orgDesc" jdbcType="VARCHAR" />
  </resultMap>
  
  
  <select id="queryOrgByAdmin" resultMap="BaseResultMap" parameterType="java.util.Map">
          <![CDATA[
          select s.object_id,t.detail_code, t.dim_code, s.dim_code_name, t.dim_code || ' - ' || s.dim_code_name as orgdesc
			  from t_map_dimcode t, t_to_dimcode s
			 where t.dim_type = 'Dim_01'
			 and t.dim_type = s.dim_type
			   and t.dim_code = s.dim_code
			   order by t.dim_code
          ]]>
  </select>

  
  <select id="queryOrgByUser" resultMap="BaseResultMap" parameterType="java.util.Map" statementType="STATEMENT">
          <![CDATA[
		       select b.itemid as object_id,
                 b.label as dim_code,
                 d.description as dim_code_name,
                 b.label || ' - ' || d.description as orgdesc 
             from HFM.${appName}_ENTITY_ITEM B 
		       inner join hfm.${appName}_entity_desc D on b.itemid = d.itemid
		       where exists (select 1 from T_LOAD_ENTITY Y where lower(y.user_code) = lower('${userName}') and y.entity_code = b.label)
		       and exists (select 1 from t_map_dimcode t where t.dim_type = 'Dim_01' and t.dim_code = b.label)		       
          ]]>
  </select>
  
  <select id="queryOrganizations" resultMap="BaseResultMap" statementType="STATEMENT">
  <![CDATA[
          select b.itemid as object_id,
                              b.label as dim_code,
                              d.description as dim_code_name,
                              b.label || ' - ' || d.description as orgdesc 
		       from hfm.${appName}_ENTITY_ITEM B 
		       LEFT JOIN hfm.${appName}_entity_desc D ON b.itemid = d.itemid 
		       where exists (select 1 from t_map_dimcode t where t.dim_type = 'Dim_01' and t.dim_code = b.label)
		       ORDER BY dim_code 
		]]>
  </select>
  
  
  <!--  
  <sql id="Base_Column_List" >
    user_id, user_name, user_pwd, user_email
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_user
    where user_id = #{id,jdbcType=INTEGER}
  </select>
  -->
  <!--  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_t
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cn.hnust.pojo.User" >
    insert into user_t (id, user_name, password, 
      age)
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.cn.hnust.pojo.User" >
    insert into user_t
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="age != null" >
        age,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cn.hnust.pojo.User" >
    update user_t
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cn.hnust.pojo.User" >
    update user_t
    set user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  -->
</mapper>